import 'package:hishabiq/core/utils/extensions/extensions.dart';
import 'package:flutter/material.dart';

class HishaBiQGridView<T> extends StatefulWidget {
  final List<T> dataList;
  final IndexedWidgetBuilder itemBuilder;
  final int rowCount;
  final double? itemHeight;
  final double? itemWidth;

  const HishaBiQGridView({
    super.key,
    required this.dataList,
    required this.itemBuilder,
    required this.rowCount,
    this.itemHeight,
    this.itemWidth,
  }) : assert(rowCount > 0, 'rowCount must be a positive integer');

  @override
  State<HishaBiQGridView<T>> createState() => _DokaneeGridViewState<T>();
}

class _DokaneeGridViewState<T> extends State<HishaBiQGridView<T>> {
  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      physics: const BouncingScrollPhysics(),
      child: Column(
        children: _buildRows(context),
      ),
    );
  }

  List<Widget> _buildRows(BuildContext context) {
    List<Widget> rows = [];
    int currentIndex = 0;

    while (currentIndex < widget.dataList.length) {
      List<Widget> currentRow = [];
      for (int i = 0;
          i < widget.rowCount && currentIndex < widget.dataList.length;
          i++) {
        currentRow.add(_buildItem(
          data: widget.dataList[currentIndex],
          context: context,
          itemBuilder: widget.itemBuilder,
          height: widget.itemHeight,
          width: widget.itemWidth,
        ));
        currentIndex++;
      }

      rows.add(Row(
        mainAxisAlignment: currentRow.length > 1
            ? currentRow.length == 2 ? MainAxisAlignment.start : MainAxisAlignment.spaceBetween
            : MainAxisAlignment.start,
        children: currentRow,
      ));
    }

    return rows;
  }

  Widget _buildItem({
    double? height,
    double? width,
    required T data,
    required IndexedWidgetBuilder itemBuilder,
    required BuildContext context,
  }) {
    return Container(
      height: height ?? 120,
      width: width ?? context.width * 0.23,
      margin: const EdgeInsets.symmetric(horizontal: 5, vertical: 5),
      child: itemBuilder(context,
          widget.dataList.indexOf(data)), // Call itemBuilder with currentIndex
    );
  }
}
